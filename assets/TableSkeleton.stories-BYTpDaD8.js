import{j as e}from"./jsx-runtime-DR9Q75dM.js";import{e as k,b as g,a as _,c as w,d as R,T as V}from"./Table-C-Z7aAqz.js";import{R as y}from"./index-DRjF_FHU.js";import{S as q}from"./Skeleton-CBnrsDVZ.js";import"./cn-8RyR4BqC.js";import"./reset-m4jX0AX_.js";import"./chevron-up-Dp-rU9It.js";import"./chevron-down-CyV3wpL8.js";import"./Icon-CTnhpE1d.js";import"./index-Bb4qSo10.js";import"./styles-x1yxmyQd.js";import"./Button-C-jt4Opy.js";import"./index-HZDBD2ik.js";import"./spinner-ZMRwnkYw.js";import"./Text-C8HBwI4b.js";const m=y.forwardRef(({tableCellProps:a,...n},r)=>e.jsx(k,{ref:r,...a,children:e.jsx(q,{...n})}));m.displayName="TableSkeletonCell";const s=y.forwardRef(({rows:a=10,columns:n=5,skeletonWidth:r="100px",skeletonHeight:t="16px",tableRowProps:x,rightAlignColumns:o=[],...h},T)=>{function j(c){return{width:Array.isArray(r)?r[c%r.length]:r,height:Array.isArray(t)?t[c%t.length]:t}}const i=Array.from({length:a},(c,S)=>e.jsx(g,{...x,children:Array.from({length:n},(v,d)=>{var p;return e.jsx(m,{style:j(d),tableCellProps:{align:(p=o==null?void 0:o.includes)!=null&&p.call(o,d)?"right":"left"}},d)})},S));return e.jsxs(e.Fragment,{children:[e.jsx(_,{children:i.map(()=>e.jsx(w,{children:"Â "}))}),e.jsx(R,{ref:T,...h,children:i})]})});s.displayName="TableSkeleton";m.__docgenInfo={description:"",methods:[],displayName:"TableSkeletonCell"};s.__docgenInfo={description:"",methods:[],displayName:"TableSkeleton",props:{rows:{defaultValue:{value:"10",computed:!1},required:!1},columns:{defaultValue:{value:"5",computed:!1},required:!1},skeletonWidth:{defaultValue:{value:'"100px"',computed:!1},required:!1},skeletonHeight:{defaultValue:{value:'"16px"',computed:!1},required:!1},rightAlignColumns:{defaultValue:{value:"[]",computed:!1},required:!1}}};const J={title:"Xenith UI/Components/Table Skeleton",component:s,tags:["autodocs"],args:{columns:11},argTypes:{rows:{control:"number"},columns:{control:"number"},skeletonWidth:{control:"object",description:"Width of the skeleton cell. Can be a string or an array of strings for each column."},skeletonHeight:{control:"object",description:"Height of the skeleton cell. Can be a string or an array of strings for each column."},rightAlignColumns:{control:"object",description:"Array of column indexes to right align.",table:{defaultValue:{summary:"[]"},type:{summary:"number[]"}}}},render:a=>e.jsx(V,{children:e.jsx(s,{...a})})},l={};var u,f,b;l.parameters={...l.parameters,docs:{...(u=l.parameters)==null?void 0:u.docs,source:{originalSource:"{}",...(b=(f=l.parameters)==null?void 0:f.docs)==null?void 0:b.source}}};const K=["Default"];export{l as Default,K as __namedExportsOrder,J as default};
