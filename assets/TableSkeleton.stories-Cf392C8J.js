import{j as e}from"./jsx-runtime-DWbWqHZ-.js";import{e as g,b as h,d as R,T as _,a as A,c as r}from"./Table-7L5dAud_.js";import{R as b}from"./index-l2PZgWEW.js";import{S as N}from"./Skeleton-Berlz_Ls.js";import"./Icon-ev__gahW.js";import"./cn-C-5SdYIA.js";import"./index-Bb4qSo10.js";import"./reset-DwhUhHkh.js";import"./styles-BNEhTmYy.js";import"./Text-sxDyydH3.js";import"./index-Cm6j2cFO.js";import"./Button-BT-8gRS6.js";import"./styles-Cs5Y1E_z.js";import"./spinner-D3uK0xOl.js";import"./chevron-down-jNWesQvo.js";const m=b.forwardRef(({tableCellProps:o,...c},a)=>e.jsx(g,{ref:a,...o,children:e.jsx(N,{...c})}));m.displayName="TableSkeletonCell";const n=b.forwardRef(({rows:o=10,columns:c=5,skeletonWidth:a="100px",skeletonHeight:l="16px",tableRowProps:y,rightAlignColumns:t=[],...j},T)=>{function S(d){return{width:Array.isArray(a)?a[d%a.length]:a,height:Array.isArray(l)?l[d%l.length]:l}}const k=Array.from({length:o},(d,w)=>e.jsx(h,{...y,children:Array.from({length:c},(V,i)=>{var u;return e.jsx(m,{style:S(i),tableCellProps:{align:(u=t==null?void 0:t.includes)!=null&&u.call(t,i)?"right":"left"}},i)})},w));return e.jsx(R,{ref:T,...j,children:k})});n.displayName="TableSkeleton";m.__docgenInfo={description:"",methods:[],displayName:"TableSkeletonCell"};n.__docgenInfo={description:"",methods:[],displayName:"TableSkeleton",props:{rows:{defaultValue:{value:"10",computed:!1},required:!1},columns:{defaultValue:{value:"5",computed:!1},required:!1},skeletonWidth:{defaultValue:{value:'"100px"',computed:!1},required:!1},skeletonHeight:{defaultValue:{value:'"16px"',computed:!1},required:!1},rightAlignColumns:{defaultValue:{value:"[]",computed:!1},required:!1}}};const G={title:"Xenith UI/Components/Table Skeleton",component:n,tags:["autodocs"],args:{columns:11},argTypes:{rows:{control:"number"},columns:{control:"number"},skeletonWidth:{control:"object",description:"Width of the skeleton cell. Can be a string or an array of strings for each column."},skeletonHeight:{control:"object",description:"Height of the skeleton cell. Can be a string or an array of strings for each column."},rightAlignColumns:{control:"object",description:"Array of column indexes to right align.",table:{defaultValue:{summary:"[]"},type:{summary:"number[]"}}}},render:o=>e.jsxs(_,{children:[e.jsx(A,{children:e.jsxs(h,{children:[e.jsx(r,{className:"min-w-[200px]",children:"Currency"}),e.jsx(r,{className:"min-w-[160px]",children:"Payment Method"}),e.jsx(r,{children:"Payment Channel"}),e.jsx(r,{children:"Status"}),e.jsx(r,{children:"Trx Max Amount"}),e.jsx(r,{children:"Trx Min Amount"}),e.jsx(r,{children:"Fee Type"}),e.jsx(r,{children:"Fee Rate"}),e.jsx(r,{children:"Fee Amount"}),e.jsx(r,{children:"Fee Min Amount"}),e.jsx(r,{children:"Fee Max Amount"})]})}),e.jsx(n,{...o})]})},s={};var p,f,x;s.parameters={...s.parameters,docs:{...(p=s.parameters)==null?void 0:p.docs,source:{originalSource:"{}",...(x=(f=s.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};const J=["Default"];export{s as Default,J as __namedExportsOrder,G as default};
